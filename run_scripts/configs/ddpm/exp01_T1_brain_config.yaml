
model:
  target: src.models.ddpm_conditioned.ConditionDDPM #models.ddpm_st_diffusion.DDPM
  params:
    dataset:
      target: src.diffusion_modules.diffusion_utils.dataloader.load_t1_brain
      params:
        # anatomy: brain
        # batch_size: &BATCH_SIZE 16
        data_dir: /home/akshay/Documents/cse_sem_6/synthrad2023/algorithm-template/run_scripts/data
        
    linear_start: 0.0001
    linear_end: 0.02
    image_size: &IMG_SIZE 284
    channels: &IMG_CHANNELS 1
    batch_size: &BATCH_SIZE 16
    timesteps: 1000 # diffusion timesteps
    max_tsteps: 3
    learning_rate: 2.0e-4 #1.0e-04
#     warmup_steps: 5000
    num_of_train_samples: 400
    num_of_val_samples: 100   
    loss_type: "huber" #options: 'l1', 'l2' and 'huber'
    beta_schedule: "linear" # options: linear, cosine, sqrt, sqrt_linear
    parameterization: "eps" # options: "eps" and "x0"
    conditioning_key: "concat"

    unet_rosinality_config:
      target: src.diffusion_modules.unet_arch.unet_rosinality.Unet
      params:
        in_channel: 2 #*IMG_CHANNELS
        out_channel: 1
        channel: 64 # model channels
        channel_multiplier: [1,1,2,2,2]
        n_res_blocks: 2
        attn_strides: [32]
        attn_heads: 1
        use_affine_time: False
        dropout: 0.1
        fold: 1

#     unet_config:
#       target: nn_arch.unet.SimpleUnet
#       params:
#         in_channels: *IMG_CHANNELS
#         out_channels: *IMG_CHANNELS
#         down_channels: [64, 128, 256, 512, 1024]
#         up_channels: [1024, 512, 256, 128, 64]
#         image_size: *IMG_SIZE
#         batch_size: *BATCH_SIZE
#         # regularization
#         drop_out: 0.2

#     modified_unet_config:
#       target: diffusion_modules.modifiedunet.Unet
#       params:
#         in_channels: *IMG_CHANNELS
#         out_channels: *IMG_CHANNELS
#         # down_channels: [64, 128, 256, 512, 1024]
#         # up_channels: [1024, 512, 256, 128, 64]
#         image_size: *IMG_SIZE
#         # batch_size: *BATCH_SIZE
#         dim_mults: [1,2,4,4]
#         resnet_block_groups: 8 # not used if using convnext
#         # regularization
#         drop_out: 0.1
        
#     openai_unet_config:
#       target: diffusion_modules.openaimodels.UNetModel
#       params:
#         image_size: *IMG_SIZE
#         in_channels: *IMG_CHANNELS
#         out_channels: *IMG_CHANNELS
#         model_channels: 224
#         attention_resolutions:
#         # downsampling factor
#         - 8
#         - 4
#         - 2
#         num_res_blocks: 2
#         channel_mult:
#         - 1
#         - 2
#         - 3
#         - 4
#         num_head_channels: 32
#         use_spatial_transformer: False
#         transformer_depth: 1
# #         dropout: 0.1
#         # context_dim: 192 #512
      
